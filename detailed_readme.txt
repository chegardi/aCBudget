More detailed information about the program, Sections*
*	.main commands
*		select
*		insert
			help
*		update
*		config
			load
			show
			year
			month
			table
			database
			help
*		read
*		help
*	SQL database setup

There are pr. April 7th a total of six (6) commands you can call at '$	./aCBudget.main >':

*
$	aCBudget.select >
The most versatile and equally dangerous command available. You can call ANY database command through this statement.
A confirmation appears if any enquiry except 'select' are attempted to execute. I am not liable for any damage done to your system or database through this command.

*
$	aCBudget.insert >
You can manually enter new insertions using this command.
The format is displayed once, and can be brought up again using by typing 'h' or 'help' when entering command.

Format is: date, comment, type, amount, with these limitations:
date: 		YYYY-MM-DD
comment:	Length of 100 characters. Any characters exceeding the 100th character are ignored
type:			Length of 16 characters. Any characters exceeding the 100th character are ignored
amount:	Use dotted '.' format for typing float numbers; ie. 102.14

There must be some time inbetween each insertion. As all insertions are inserted with a unique id of length 5 which is generated by the program. However the program uses time for creating random seed, and too quick insertions will create equal seed (and therefore sql_exectuion will fail on UNIQUE_CONSTRAINT).

*
$	aCBudget.update >
Here you can update a row with a new amount, and simultaneously add another row with same date, but new comment, type and amount. You are only able to type the day in here. If you want to switch month, look at 'config' section.

*
$	aCBudget.config >
In this command you can configurate the default database and date variables the program uses, save them to file, or load from file.
Default config file 'config.ini" is as follows:
```
#configuration file for aCBudget
database=regnskap.db
year=2014
table=r2014
month=01
```
Below is the long (and short) commands with explanations.
$	aCBudget.config > save (sv)
Saves the current configuration to file 'config.ini' if it exists, else it creates the file and then save the configuration.
$	aCBudget.config > load (ld)
Command loads variables from 'config.ini' if it exists, else it initializes default variables and stores them in a new file 'config.ini'
$	aCBudget.config > show (sw)
Shows the current configuration.
$	aCBudget.config > year (yr)
Shows the saved year.
$	aCBudget.config > month (mn)
Shows the saved month.
$	aCBudget.config > table (tb)
Shows the saved table.
$	aCBudget.config > database (db)
Shows the saved database.
$	aCBudget.config > help (h)
Shows a list of commands, their abbreviations and some explanations.

*
$	aCBudget.read > 
Reads either files from DNB (1) or Sparebanken Sør (2) for quick insertions from "nettbank" (online bank).
Program reads line by line, displays the information and asks user if an insertion is wished.
If wished, it fetches date and amount, and prompts user for comment and type.
In DNB it only asks for TYPE, then asks user if it is correct, or an edit of comment is wished (y/n/e).
After all info is given the program creates unique ID and inserts the row into the database.
Because the ID is an unique constraint in database, and is randomly generated, there is a 1:34^5 chance it will be a duplicate and read will fail.
If this happens, or if you quit while reading the file - you must manually go through the file and remove lines you've "done", as the program only reads files, and it is boring saying "n(o)" to all the lines you don't want to add again on next 'read'.

*
$	aCBudget.main > help (h)
Shows the current list of commands explained over, with a short explanation.

*
SQL database setup:
How your database should look like:

File: regnskap.db

SQL Table statement;
```
create table r2014 (
	date date,
	comment varchar[99],
	type varchar[15],
	amount BIGINT,
	id varchar[5] unique
);
```
I choose to call the table r2014 as I started using this program in 2014, and wanted a short name for "regnskap 2014".
You can of course use any name you want, but remember to change it in configuration first.

That should be it!
If you find any parts of this information hard, please leave me a note on Github and I'll see if I can do something about it!